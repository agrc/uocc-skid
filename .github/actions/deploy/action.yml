name: Deploy
description: Deploy to GCP
inputs:
  project_id:
    description: "The GCP project ID"
    required: true
  identity_provider:
    description: "The identity provider for the workload identity"
    required: true
  service_account_email:
    description: "The service account email"
    required: true
  pause_schedule_job:
    description: "Pause the scheduler job"
    required: false
    default: "no"
  github_token:
    description: "The GitHub token"
    required: true

runs:
  using: composite
  steps:
    - name: 🗝️ Authenticate to Google Cloud
      id: auth
      uses: google-github-actions/auth@v2
      with:
        workload_identity_provider: ${{ inputs.identity_provider }}
        service_account: ${{ inputs.service_account_email }}
        token_format: "access_token"

    - name: 🐳 Set up Docker Buildx
      id: builder
      uses: docker/setup-buildx-action@v3

    - name: 🗝️ Authenticate Docker to Google Cloud
      uses: docker/login-action@v3
      with:
        registry: us-central1-docker.pkg.dev
        username: oauth2accesstoken
        password: ${{ steps.auth.outputs.access_token }}

    - name: 🏷️ Extract tags from GitHub
      id: meta
      uses: docker/metadata-action@v5
      with:
        github-token: ${{ inputs.github_token }}
        images: us-central1-docker.pkg.dev/${{ inputs.project_id }}/images/job
        tags: |
          type=ref,suffix=-{{sha}},event=branch
          type=ref,prefix=pr-,suffix=-{{sha}},event=pr
          type=semver,pattern={{version}}
          latest

    - name: 📦 Build and push image
      uses: docker/build-push-action@v6
      with:
        builder: ${{ steps.builder.outputs.name }}
        tags: ${{ steps.meta.outputs.tags }}
        context: .
        file: ./Dockerfile
        push: true
        cache-from: type=gha
        cache-to: type=gha,mode=max
        provenance: false

    - name: ☁️ Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v2

    - name: 🚀 Deploy Cloud Run Job
      uses: google-github-actions/deploy-cloudrun@v2
      with:
        project_id: ${{ inputs.project_id }}
        region: us-central1
        image: us-central1-docker.pkg.dev/${{ inputs.project_id }}/images/job:latest
        job: default
        secrets: /secrets/app/secrets.json=skid-secrets:latest
        secrets_update_strategy: overwrite
        timeout: 3h
        flags: |
          --memory=3Gi
          --task-timeout=3h
          --max-retries=0
          --service-account=cloud-run-sa@${{ inputs.project_id }}.iam.gserviceaccount.com

    - name: 🕰️ Create Cloud Scheduler
      shell: bash
      run: |
        for i in $(gcloud scheduler jobs list --location=us-central1 --uri); do
          gcloud scheduler jobs delete $i --quiet
        done
        gcloud scheduler jobs create http skinname-schedule \
          --description="Trigger the skinname-skid bot once a week on saturday evening" \
          --schedule="0 3 * * 1" \
          --time-zone=America/Denver \
          --location=us-central1 \
          --uri="https://us-central1-run.googleapis.com/apis/run.googleapis.com/v1/namespaces/${{ inputs.project_id }}/jobs/default:run" \
          --oauth-service-account-email=scheduler-sa@${{ inputs.project_id }}.iam.gserviceaccount.com

    - name: 🙅 Pause Scheduler Job
      shell: bash
      if: inputs.pause_schedule_job != 'no'
      run: |
        gcloud scheduler jobs pause "skinname-schedule" --location=us-central1 --quiet
